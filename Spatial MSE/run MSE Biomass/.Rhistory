}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true.catch(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
#F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
# F0 = F0,
PSEL = PSEL
)
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment2", silent = TRUE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
upper[names(upper) == 'logh']<- log(1) # h can't be over 1
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper)) # If error one of the random effects is unused
rep<-sdreport(obj)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
yl <- ylimits(SSB$name,sim.data$SSB)
# plot(df.new$years,SSB$name, type = 'l', ylim = yl, xlab = 'year')
# lines(df.new$years,rowSums(sim.data$SSB), col = 'red')
# polygon()
par(mfrow = c(2,1), mar = c(4,4,1,1))
plotUncertainty(SSB,rowSums(sim.data$SSB))
df.plot <- df.new
df.plot$survey[df.plot$survey == 1] <- NA
plotUncertainty(Biomass, df.plot$survey)
Catch <- getUncertainty('Catch',df)
plot(Catch$name)
lines(df$Catch)
age_obs <- df$age_catch
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment2.cpp")
seedz <- 125
set.seed(seedz)
dyn.load(dynlib("runHakeassessment2"))
# Run the simulation model
source('run_agebased_model_true_Catch.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('getRefpoint_biomass.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv('hake_totcatch.csv')
df <- load_data_seasons()
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
plot(df$years,df$Catch, type = 'l')
points(df$years,sim.data$Catch)
# Plot the fishing mortality
plot(df$years,(rowSums(sim.data$Fsave[,,2])+rowSums(sim.data$Fsave[,,1]))/2)
lines(df$years,assessment$F0)
#
# save(sim.data,file = 'simulated_space_OM.Rdata')
# save(df,file = 'sim_data_parms.Rdata')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
F0.save <- df$fmort
years <- df$years
df$F0 <- assessment$F0
model.save <- list()
##
#SSB.test.om <- list() # Test if SSB is the same in the OM
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment2.cpp")
seedz <- 125
set.seed(seedz)
dyn.load(dynlib("runHakeassessment2"))
# Run the simulation model
source('run_agebased_model_true_Catch.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('getRefpoint_biomass.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv('hake_totcatch.csv')
df <- load_data_seasons()
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
plot(df$years,df$Catch, type = 'l')
points(df$years,sim.data$Catch)
# Plot the fishing mortality
plot(df$years,(rowSums(sim.data$Fsave[,,2])+rowSums(sim.data$Fsave[,,1]))/2)
lines(df$years,assessment$F0)
#
# save(sim.data,file = 'simulated_space_OM.Rdata')
# save(df,file = 'sim_data_parms.Rdata')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
F0.save <- df$fmort
years <- df$years
df$F0 <- assessment$F0
model.save <- list()
##
#SSB.test.om <- list() # Test if SSB is the same in the OM
time
year <- yrinit+(time-1)
if (time > 1){
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true.catch(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
#F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
# F0 = F0,
PSEL = PSEL
)
##  Create a data frame to send to runHakeassessment
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment2", silent = TRUE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
upper[names(upper) == 'logh']<- log(1) # h can't be over 1
# lower[names(lower) == 'PSEL'] <- -0.8
# upper[names(upper) == 'PSEL'] <- +0.8
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper)) # If error one of the random effects is unused
rep<-sdreport(obj)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
Catch <- getUncertainty('Catch',df)
age_catch_est<- getUncertainty('age_catch_est',df)
head(age_catch_est)
age_survey_est <- getUncertainty('age_survey_est',df)
age_obs <- df$age_catch
age_est <- age_catch_est
head(age_catch_est)
plot(age_catch_est[1:df$nage])
plot(age_catch_est$name[1:df$nage])
plot(age_catch_est$name)
plot(age_catch_est$name[1:100])
plot(age_catch_est$name[1:df$nage])
sum(age_catch_est$name[1:df$nage])
# Turn the vector into a matrix
A <- df$age_maxage
A
sum(age_catch_est$name[1:A])
df <- data.frame(year = rep(df$years,each = A), am = NA, min = NA, max = NA)
head(df)
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment2.cpp")
seedz <- 125
set.seed(seedz)
dyn.load(dynlib("runHakeassessment2"))
# Run the simulation model
source('run_agebased_model_true_Catch.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('getRefpoint_biomass.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv('hake_totcatch.csv')
df <- load_data_seasons()
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
plot(df$years,df$Catch, type = 'l')
points(df$years,sim.data$Catch)
# Plot the fishing mortality
plot(df$years,(rowSums(sim.data$Fsave[,,2])+rowSums(sim.data$Fsave[,,1]))/2)
lines(df$years,assessment$F0)
#
# save(sim.data,file = 'simulated_space_OM.Rdata')
# save(df,file = 'sim_data_parms.Rdata')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
F0.save <- df$fmort
years <- df$years
df$F0 <- assessment$F0
model.save <- list()
year <- yrinit+(time-1)
if (time > 1){
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true.catch(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
#F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
# F0 = F0,
PSEL = PSEL
)
##  Create a data frame to send to runHakeassessment
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment2", silent = TRUE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
upper[names(upper) == 'logh']<- log(1) # h can't be over 1
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper)) # If error one of the random effects is unused
rep<-sdreport(obj)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
Catch <- getUncertainty('Catch',df)
age_catch_est<- getUncertainty('age_catch_est',df)
age_survey_est <- getUncertainty('age_survey_est',df)
age_obs <- df$age_catch
age_est <- age_catch_est
# Turn the vector into a matrix
A <- df$age_maxage
df.am <- data.frame(year = rep(df$years,each = A), age = rep(1:A,df$nyear),am = NA, min = NA, max = NA)
head(df.am)
dim(df.am)
dim(age_est)
df.am$am <- age_est$name
df.am$min <- age_est$min
df.am$max <- age_est$max
df.am
# Calculate the average age
df.mean <- df.am %>%
group_by(year) %>%
summarise(am = sum(am*age))
df.mean
# Calculate the average age
df.mean <- data.frame(year = df$years, am = NA, min = NA, max = NA)
i <- 1
df.tmp <- df.am[df.am$year == df$years[i],]
df.tmp
# Calculate the average age
df.mean <- data.frame(year = df$years, am = NA, min = NA, max = NA)
for(i in 1:df$nyear){
df.tmp <- df.am[df.am$year == df$years[i],]
df.mean$am[i] <- sum(df.tmp$am*df.tmp$age)
df.mean$min <- mean(df.tmp$min)
df.mean$max <- mean(df.tmp$max)
}
df.mean
df.mean.obs <- data.frame(year = df$years, am = NA)
df.tmp$min
# Turn the vector into a matrix
A <- df$age_maxage
df.am <- data.frame(year = rep(df$years,each = A), age = rep(1:A,df$nyear),am = NA, min = NA, max = NA)
df.am$am <- age_est$name
df.am$min <- age_est$min
df.am$max <- age_est$max
# Calculate the average age
df.mean.est <- data.frame(year = df$years, am = NA, min = NA, max = NA)
df.mean.obs <- data.frame(year = df$years, am = NA)
for(i in 1:df$nyear){
df.tmp <- df.am[df.am$year == df$years[i],]
df.mean.est$am[i] <- sum(df.tmp$am*df.tmp$age)
df.mean.est$min[i] <- mean(df.tmp$min, na.rm = T)
df.mean.est$max[i] <- mean(df.tmp$max, na.rm = T)
df.mean.obs$am[i] <- sum(age_obs[,i]*df$age[2:16])
}
df.mean.obs
p <- ggplot(df.am, aes(x = year, y = am))+geom_line()
print(p)
p <- ggplot(df.mean.est, aes(x = year, y = am))+geom_line()
print(p)
p <- ggplot(df.mean.est, aes(x = year, y = am))+geom_line()+geom_line(data = df.mean.obs)
print(p)
p <- ggplot(df.mean.est, aes(x = year, y = am))+geom_line()+geom_line(data = df.mean.obs, col = 'red')+theme_classic()
print(p)
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
checkAgecomps(df$age_catch,age_catch_est)
checkAgecomps(df$age_catch,age_catch_est,df)
checkAgecomps(df$age_survey,age_survey_est,df)
df$age_survey
age_survey_est
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
checkAgecomps(df$age_catch,age_catch_est,df)
checkAgecomps(df$age_survey,age_survey_est,df)
df$age_survey
age_obs <- df$age_survey
age_obs[age_obs < 0 ]< -NA
age_obs
age_obs[age_obs < 0 ]<- NA
age_obs
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
checkAgecomps(df$age_catch,age_catch_est,df)
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
checkAgecomps(df$age_catch,age_catch_est,df)
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
source('~/GitHub/PacifichakeMSE/Spatial MSE/run MSE Biomass/checkAgecomps.R')
checkAgecomps(df$age_catch,age_catch_est,df)
checkAgecomps(df$age_survey,age_survey_est,df)
