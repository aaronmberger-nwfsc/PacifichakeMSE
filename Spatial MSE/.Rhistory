library(TMB)
library(reshape2)
source('plotUncertainty.R')
source('getUncertainty.R')
source('load_data.R')
source('ylimits.R')
source('parameters_TRUE.R')
source('Check_Identifiable_vs2.R')
# Read the assessment data
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
catches.obs <- read.csv('catches.csv')
df <- load_data()
years <- df$years
#U[2,] <- 0.01
parms <- getParameters(FALSE)
# if(sum(parms$F0) == 0){
#   parms$F0 <- parms$F0+0.001 # Make sure it's over 1
# }
compile("runHakeassessment2.cpp")
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2")#, )
# Test the input things
reps <- obj$report()
# # Does the model and data look correct
plot(reps$SSB)
lines(assessment$SSB)
plot(reps$Fyear)
plot(reps$Catch, ylim = c(50000,450000))
lines(catches.obs$Total, col = 'red')
points(df$Catchobs, col = 'red')
plot(reps$Fyear)
lines(assessment$F0)
plot(df$years[df$years > 1994],reps$Biomass[df$years > 1994]*1e-6, type = 'l', ylab = 'survey', xlab = 'years')
points(df$years[df$flag_survey == 1], df$survey[df$flag_survey == 1]*1e-6)
lower <- obj$par-Inf
# lower[names(lower) == 'PSEL'] <- -1
#lower[names(lower) == 'logh'] <- 0
lower[names(lower) == 'F0'] <- 0.01
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 1
upper[names(upper) == 'PSEL'] <- 5
# upper[names(upper) == 'logh'] <- log(0.999)
#
#lower[which(names(lower)== 'initN')] <- 3
# #lower['logh'] <- log(0.7)
# #upper[which(names(upper) == 'logMinit')] <- log(0.5)
# upper[which(names(upper) == 'logh')] <- log(0.99)
# upper[which(names(upper) == 'logRinit')] <- log(20)
# upper['logSDsurv'] = log(1)
# lower['logSDsurv'] = log(0.1)
#upper['logQ'] = log(1e-3)
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 2000,
eval.max = 2000))) # If error one of the random effects is unused
sims <- obj$simulate()
rep<-sdreport(obj)
xx<- Check_Identifiable_vs2(obj)
#rep
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
unique(rep.values)
source('getUncertainty.R')
df$nyear <- length(years)
df$year <- years
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
surveyselec.est <- getUncertainty('surveyselc', df)
catchselec.est <- getUncertainty('catchselec', df)
plotUncertainty(SSB, assessment$SSB)
## Run the SAM assessment model for hake
setwd("C:/Users/Nis/Dropbox/NOAA/Hake MSE/Hake SS3 version/")# Load the data
library(r4ss)
library(TMB)
library(reshape2)
source('plotUncertainty.R')
source('getUncertainty.R')
source('load_data.R')
source('ylimits.R')
source('parameters_TRUE.R')
source('Check_Identifiable_vs2.R')
# Read the assessment data
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
catches.obs <- read.csv('catches.csv')
df <- load_data()
years <- df$years
#U[2,] <- 0.01
parms <- getParameters(FALSE)
compile("runHakeassessment2.cpp")
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2")#, )
source('C:/Users/Nis/Dropbox/NOAA/Hake MSE/Hake SS3 version/parameters_TRUE.R')
source('C:/Users/Nis/Dropbox/NOAA/Hake MSE/Hake SS3 version/parameters_TRUE.R')
parms <- getParameters(FALSE)
# if(sum(parms$F0) == 0){
#   parms$F0 <- parms$F0+0.001 # Make sure it's over 1
# }
compile("runHakeassessment2.cpp")
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2")#, )
# Test the input things
reps <- obj$report()
# # Does the model and data look correct
plot(reps$SSB)
lines(assessment$SSB)
plot(reps$Fyear)
plot(reps$Catch, ylim = c(50000,450000))
lines(catches.obs$Total, col = 'red')
points(df$Catchobs, col = 'red')
plot(reps$Fyear)
lines(assessment$F0)
plot(df$years[df$years > 1994],reps$Biomass[df$years > 1994]*1e-6, type = 'l', ylab = 'survey', xlab = 'years')
points(df$years[df$flag_survey == 1], df$survey[df$flag_survey == 1]*1e-6)
lower <- obj$par-Inf
# lower[names(lower) == 'PSEL'] <- -1
#lower[names(lower) == 'logh'] <- 0
lower[names(lower) == 'F0'] <- 0.01
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 1
upper[names(upper) == 'PSEL'] <- 5
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 2000,
eval.max = 2000))) # If error one of the random effects is unused
compile("runHakeassessment2.cpp")
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2")#, )
# Test the input things
reps <- obj$report()
# # Does the model and data look correct
plot(reps$SSB)
lines(assessment$SSB)
plot(reps$Fyear)
plot(reps$Catch, ylim = c(50000,450000))
lines(catches.obs$Total, col = 'red')
points(df$Catchobs, col = 'red')
plot(reps$Fyear)
lines(assessment$F0)
plot(df$years[df$years > 1994],reps$Biomass[df$years > 1994]*1e-6, type = 'l', ylab = 'survey', xlab = 'years')
points(df$years[df$flag_survey == 1], df$survey[df$flag_survey == 1]*1e-6)
lower <- obj$par-Inf
# lower[names(lower) == 'PSEL'] <- -1
#lower[names(lower) == 'logh'] <- 0
lower[names(lower) == 'F0'] <- 0.01
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
# upper[names(upper) == 'logh'] <- log(0.999)
#
#lower[which(names(lower)== 'initN')] <- 3
# #lower['logh'] <- log(0.7)
# #upper[which(names(upper) == 'logMinit')] <- log(0.5)
# upper[which(names(upper) == 'logh')] <- log(0.99)
# upper[which(names(upper) == 'logRinit')] <- log(20)
# upper['logSDsurv'] = log(1)
# lower['logSDsurv'] = log(0.1)
#upper['logQ'] = log(1e-3)
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 2000,
eval.max = 2000)))
sims <- obj$simulate()
rep<-sdreport(obj)
xx<- Check_Identifiable_vs2(obj)
#rep
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
unique(rep.values)
source('getUncertainty.R')
df$nyear <- length(years)
df$year <- years
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
surveyselec.est <- getUncertainty('surveyselc', df)
catchselec.est <- getUncertainty('catchselec', df)
plotUncertainty(SSB, assessment$SSB)
lines(reps$SSB)
plotUncertainty(Catch, df$Catchobs)
yl <- ylimits(Biomass$name*1e-9,df$survey[df$survey > 1]*1e-9)
plot(years[df$survey>1],Biomass$name[df$survey>1]*1e-9, xlim = c(1990,2019), ylim = yl, xlab= 'survey')
points(years[df$survey > 1],df$survey[df$survey > 1]*1e-9, col = 'green')
plotUncertainty(F0, assessment$F0)
plotUncertainty(R, assessment$R)
df$survey[df$survey == 1] <- NA
plot(df$year, df$survey*1e-6, xlim = c(1994,2017), ylim = c(0,5))
lines(Biomass$year,Biomass$name*1e-6)
lines(Biomass$year,Biomass$min*1e-6, col = 'red')
lines(Biomass$year,Biomass$max*1e-6, col = 'red')
# Plot the selectvitiy
source('getSelec.R')
# Plot the age comps in all years
ages <- 1:15
comp.year <- length(df$flag_catch[df$flag_catch == 1])
age_catch_est <- getUncertainty('age_catch_est', df)
age_catch <- getUncertainty('age_catch', df)
age_catch_est$age <- rep(ages, df$nyear)
age_catch_est$year <- rep(df$year, each = 15)
head(age_catch_est)
df.plot <- data.frame(comps = c(age_catch_est$name,age_catch$name),
year = rep(age_catch_est$year,2), age = rep(age_catch_est$age,2), model = rep(c('estimated','data'), each = 780))
df.plot <- df.plot[df.plot$year > 1974,]
library(ggplot2)
ggplot(data = df.plot, aes(x = age, y = comps, color = model))+geom_line()+facet_wrap(facets = ~year)+theme_bw()
nms <- c('SDR','psel','catch','survey','survcomp','ans_catchcomp')
LogLik<- getUncertainty('ans_tot', df)
plot(1:6,LogLik$name)
obj <-MakeADFun(df,parms,DLL="runHakeassessment2", random = 'Rin')#, )
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2", random = 'Rin')#, )
# Test the input things
reps <- obj$report()
# # Does the model and data look correct
plot(reps$SSB)
lines(assessment$SSB)
plot(reps$Fyear)
plot(reps$Catch, ylim = c(50000,450000))
#U[2,] <- 0.01
parms <- getParameters(TRUE)
compile("runHakeassessment2.cpp")
dyn.load(dynlib("runHakeassessment2"))
obj <-MakeADFun(df,parms,DLL="runHakeassessment2", random = 'Rin')#, )
# Test the input things
reps <- obj$report()
lower <- obj$par-Inf
# lower[names(lower) == 'PSEL'] <- -1
#lower[names(lower) == 'logh'] <- 0
lower[names(lower) == 'F0'] <- 0.01
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 2000,
eval.max = 2000))) # If error one of the random effects is unused
#sims <- obj$simulate()
rep<-sdreport(obj)
rep
#rep
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
unique(rep.values)
source('getUncertainty.R')
df$nyear <- length(years)
df$year <- years
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
surveyselec.est <- getUncertainty('surveyselc', df)
catchselec.est <- getUncertainty('catchselec', df)
plotUncertainty(SSB, assessment$SSB)
lines(reps$SSB)
plotUncertainty(Catch, df$Catchobs)
yl <- ylimits(Biomass$name*1e-9,df$survey[df$survey > 1]*1e-9)
plot(years[df$survey>1],Biomass$name[df$survey>1]*1e-9, xlim = c(1990,2019), ylim = yl, xlab= 'survey')
points(years[df$survey > 1],df$survey[df$survey > 1]*1e-9, col = 'green')
plotUncertainty(F0, assessment$F0)
plotUncertainty(R, assessment$R)
exp(rep$par.fixed)[1:10]
exp(rep$par.fixed)[1:15]
exp(rep$par.fixed[names(rep$par.fixed) == 'initN'])
plot(exp(rep$par.fixed[names(rep$par.fixed) == 'initN']))
## Run a simple MSE based on subfunctions ###### Run the HAKE MSE #######
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment4.cpp")
seedz <- 125
set.seed(seedz)
dyn.load(dynlib("runHakeassessment2"))
# Run the simulation model
source('run_agebased_model_true_seasons.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('SSB0calc.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('SSB0calc.R')
source('getRefpoint.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
df <- load_data_seasons()
time <- 1
yrinit <- df$nyear
simyears <- 50 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true_seasons(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
F0.save <- df$fmort
years <- df$years
df$F0 <- assessment$F0
model.save <- list()
SSB.test.om <- list() # Test if SSB is the same in the OM
start.time <- Sys.time()
time
year <- yrinit+(time-1)
if (time > 1){
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true_seasons(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
#F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
# F0 = F0,
PSEL = PSEL
)
F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
F0 = F0,
PSEL = PSEL
)
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
paaarams
parms
str(parms)
## Run a simple MSE based on subfunctions ###### Run the HAKE MSE #######
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment4.cpp")
seedz <- 125
set.seed(seedz)
dyn.load(dynlib("runHakeassessment2"))
# Run the simulation model
source('run_agebased_model_true_seasons.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('SSB0calc.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('SSB0calc.R')
source('getRefpoint.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
df <- load_data_seasons()
time <- 1
yrinit <- df$nyear
simyears <- 50 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true_seasons(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
years <- df$years
F0.save <- df$fmort
df$F0 <- assessment$F0
model.save <- list()
SSB.test.om <- list() # Test if SSB is the same in the OM
start.time <- Sys.time()
year <- yrinit+(time-1)
if (time > 1){
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true_seasons(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
F0 <- rep(0.01, df$tEnd)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
#logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
F0 = F0,
PSEL = PSEL
)
##  Create a data frame to send to runHakeassessment
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
str(paarms)
str(parms)
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
