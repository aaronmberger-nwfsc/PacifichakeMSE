#logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
F0 = F0,
PSEL = PSEL
)
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
df.new$age_catch
sim.data$age_catch
df.new <- create_TMB_data(sim.data, df)
df.new$age_catch
setwd("~/GitHub/PacifichakeMSE/Spatial MSE")
source('~/GitHub/PacifichakeMSE/Spatial MSE_vs2/create_TMB_data.R')
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
lower[names(lower) == 'F0'] <- 0.01
lower[names(lower) == 'F0'] <- 0.001
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
lower[names(lower) == 'F0'] <- 1e-10
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 5000,
eval.max = 5000))) # If error one of the random effects is unused
SSB.save[[time]] <- obj$report()$SSB
if(opt$convergence == 1){
print(paste('year',df$years[length(df$years)], 'did not converge'))
}
start.time <- Sys.time()
rep<-sdreport(obj)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
#
#
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
N$age <- rep(seq(1,df$nage), length.out = year*df$nage)
N$year <- rep(df$years, each = df$nage)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
yl <- ylimits(SSB$name,sim.data$SSB)
# plot(df.new$years,SSB$name, type = 'l', ylim = yl, xlab = 'year')
# lines(df.new$years,rowSums(sim.data$SSB), col = 'red')
# polygon()
par(mfrow = c(2,1), mar = c(4,4,1,1))
plotUncertainty(SSB,rowSums(sim.data$SSB))
df.plot <- df.new
df.plot$survey[df.plot$survey == 1] <- NA
plotUncertainty(Biomass, df.plot$survey)
plotUncertainty(Catch, df.new$Catchobs)
# Fsel <- getSelec(df$age,rep$par.fixed[names(rep$par.fixed) == 'psel_fish'], df$Smin, df$Smax)
# F40 <- referencepoints(SSB$name[length(SSB$name)])
#
Nend <- N$name[N$year == df$years[length(df$years)]]
Fnew <- getRefpoint(rep$par.fixed, df,SSB$name[length(SSB$name)], Fin=df$F0[length(df$F0)], Nend)
Fnew
Ntmp <- sim.data$Nout
df$tEnd <- df$tEnd+1 # Just run one more year in subsequent runs
df$wage_catch <- df.new$wage_catch
df$wage_survey <- df.new$wage_survey
df$wage_mid <- df.new$wage_mid
df$wage_ssb <- df.new$wage_ssb
df$Catch
df$Catch <- c(df$Catch, Fnew[[1]])
# Save some EM stuff in the last year
SSB.save[[time]] <- SSB
R.save[[time]] <- R
F40.save[time] <- Fnew[[2]]
Catch.save[[time]] <- Catch
# And the fishing mortality
F0.save <- Fnew
#  print(year.future[year])
SSB.test.om[[time]] <- rowSums(sim.data$SSB)
time
time <- 2
year <- yrinit+(time-1)
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true_seasons(df, seedz)
sim.data <- run.agebased.true.catch(df, seedz)
sim.data$Catch
Fnew
plot(sim.data$Catch)
lines(df$Catch)
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
F0 <- rep(0.01, df$nyear)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
#logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
F0 = F0,
PSEL = PSEL
)
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
lower[names(lower) == 'F0'] <- 1e-10
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 5000,
eval.max = 5000))) # If error one of the random effects is unused
SSB.save[[time]] <- obj$report()$SSB
if(opt$convergence == 1){
print(paste('year',df$years[length(df$years)], 'did not converge'))
}
start.time <- Sys.time()
rep<-sdreport(obj)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
#
#
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
N$age <- rep(seq(1,df$nage), length.out = year*df$nage)
N$year <- rep(df$years, each = df$nage)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
yl <- ylimits(SSB$name,sim.data$SSB)
# plot(df.new$years,SSB$name, type = 'l', ylim = yl, xlab = 'year')
# lines(df.new$years,rowSums(sim.data$SSB), col = 'red')
# polygon()
par(mfrow = c(2,1), mar = c(4,4,1,1))
plotUncertainty(SSB,rowSums(sim.data$SSB))
df.plot <- df.new
df.plot$survey[df.plot$survey == 1] <- NA
plotUncertainty(Biomass, df.plot$survey)
plotUncertainty(Catch, df.new$Catchobs)
# Fsel <- getSelec(df$age,rep$par.fixed[names(rep$par.fixed) == 'psel_fish'], df$Smin, df$Smax)
# F40 <- referencepoints(SSB$name[length(SSB$name)])
#
Nend <- N$name[N$year == df$years[length(df$years)]]
Fnew <- getRefpoint(rep$par.fixed, df,SSB$name[length(SSB$name)], Fin=df$F0[length(df$F0)], Nend)
Ntmp <- sim.data$Nout
df$tEnd <- df$tEnd+1 # Just run one more year in subsequent runs
df$wage_catch <- df.new$wage_catch
df$wage_survey <- df.new$wage_survey
df$wage_mid <- df.new$wage_mid
df$wage_ssb <- df.new$wage_ssb
df$Catch <- c(df$Catch, Fnew[[1]])
# Save some EM stuff in the last year
SSB.save[[time]] <- SSB
R.save[[time]] <- R
F40.save[time] <- Fnew[[2]]
Catch.save[[time]] <- Catch
# And the fishing mortality
F0.save <- Fnew
#  print(year.future[year])
SSB.test.om[[time]] <- rowSums(sim.data$SSB)
direc <- "~/GitHub/PacifichakeMSE/Spatial MSE_vs2/"
setwd(direc)
###### Initialize the operating model ######
library(TMB)
compile("runHakeassessment4.cpp")
dyn.load(dynlib("runHakeassessment4"))
seedz <- 125
set.seed(seedz)
# Run the simulation model
source('run_agebased_model_true_Catch.R')
source('ylimits.R')
source('plotUncertainty.R')
source('getUncertainty.R')
source('SSB0calc.R')
source('getSelec.R')
source('load_data_seasons.R')
source('create_TMB_data.R')
source('SSB0calc.R')
source('getRefpoint.R')
source('Check_Identifiable_vs2.R')
assessment <- read.csv('asssessment_MLE.csv')
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv('hake_totcatch.csv')
df <- load_data_seasons()
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
plot(rowSums(sim.data$SSB)/sum(sim.data$SSB_0), type = 'l', ylab = 'SSB/SSB_0')
#
# save(sim.data,file = 'simulated_space_OM.Rdata')
# save(df,file = 'sim_data_parms.Rdata')
F40.save<- array(NA,simyears)
# Save some stuff
SSB.save <- list()
R.save <- list()
Catch.save <- list()
S.year.future <- seq(2019,2019+simyears, by = 2)
# Save som OM stuff
SSB.save.om <- array(NA, df$tEnd+simyears)
R.save.om <- array(NA, df$tEnd+simyears)
Catch.save.om <- array(NA, df$tEnd+simyears)
# Before the MSE starts
SSB.save.om[1:df$tEnd] <- sim.data$SSB
R.save.om[1:df$tEnd] <- sim.data$N.save[1,]
Catch.save.om[1:df$tEnd] <- sim.data$Catch
F0.save <- df$fmort
years <- df$years
model.save <- list()
##
SSB.test.om <- list() # Test if SSB is the same in the OM
start.time <- Sys.time()
for (time in 1:simyears){
year <- yrinit+(time-1)
print(year)
if (time > 1){
if(sum(year.future[year] == S.year.future)>0){
df$flag_survey <- c(df$flag_survey,1)
df$survey_x <- c(df$survey_x,2)
# df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$ss_survey <- c(df$ss_survey,ceiling(mean(df$ss_survey[df$ss_survey > 0])))
df$survey_err <- c(df$survey_err,mean(df$survey_err[df$survey_err < 1]))
}else{
df$flag_survey <- c(df$flag_survey,-1)
df$survey_x <- c(df$survey_x,-2)
df$ss_survey <- c(df$ss_survey,-1)
df$survey_err <- c(df$survey_err,1)
}
df$ss_catch <- c(df$ss_catch,ceiling(mean(df$ss_catch[df$ss_catch > 0])))
df$flag_catch <- c(df$flag_catch,1)
df$years <- year.future[1:year]
df$nyear <- length(df$years)
sim.data <- run.agebased.true.catch(df, seedz)
# # Add to the original data frame
#
# # 1 measurement per year
# sim.data$SSB <- c(sim.data$SSB, sim.data.tmp$SSB[df.tmp$tEnd])
# sim.data$Catch<- c(sim.data$Catch, sim.data.tmp$Catch[df.tmp$tEnd])
# sim.data$Catch.obs <- c(sim.data$Catch.obs, sim.data.tmp$Catch.obs[df.tmp$tEnd])
#
# # Measurement per age
# sim.data$N.save <- cbind(sim.data$N.save,sim.data.tmp$N.save)
# sim.data$survey <- cbind(sim.data$survey,sim.data.tmp$survey[df.tmp$tEnd])
# sim.data$Catch.age <- cbind(sim.data$Catch.age,sim.data.tmp$Catch.age)
#
}
PSEL <- matrix(0,5, length(1991:years[length(years)]))
initN <- rep(0,df$nage-1)
F0 <- rep(0.01, df$nyear)
Rdev <- rep(0, df$nyear)
parms <- list( # Just start all the simluations with the same initial conditions
logRinit = 15,
#logh = log(0.5),
logMinit = log(0.3),
logSDsurv = log(0.3),
#logSDR = log(1.4),
logphi_catch = log(0.8276),
logphi_survey = log(11.33),
# logSDF = log(0.1),
# Selectivity parameters
psel_fish = c(2.486490, 0.928255,0.392144,0.214365,0.475473),
psel_surv = c(0.568618,-0.216172,0.305286 ,0.373829),
initN = initN,
Rin = Rdev,
F0 = F0,
PSEL = PSEL
)
##  Create a data frame to send to runHakeassessment
df.new <- create_TMB_data(sim.data, df)
obj <-MakeADFun(df.new,parms,DLL="runHakeassessment4", silent = FALSE) # Run the assessment
reps <- obj$report()
lower <- obj$par-Inf
upper <- obj$par+Inf
lower[names(lower) == 'F0'] <- 1e-10
upper <- obj$par+Inf
upper[names(upper) == 'psel_fish' ] <- 5
upper[names(upper) == 'PSEL'] <- 5
system.time(opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,
control = list(iter.max = 5000,
eval.max = 5000))) # If error one of the random effects is unused
SSB.save[[time]] <- obj$report()$SSB
if(opt$convergence == 1){
print(paste('year',df$years[length(df$years)], 'did not converge'))
}
start.time <- Sys.time()
rep<-sdreport(obj)
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
#Uncertainty
sdrep <- summary(rep)
rep.values<-rownames(sdrep)
nyear <- df$tEnd
#
#
SSB <- getUncertainty('SSB',df)
F0 <- getUncertainty('Fyear',df)
Catch <- getUncertainty('Catch',df)
N <- getUncertainty('N',df)
N$age <- rep(seq(1,df$nage), length.out = year*df$nage)
N$year <- rep(df$years, each = df$nage)
Biomass <- getUncertainty('Biomass',df)
R <- getUncertainty('R',df)
## Plots
yl <- ylimits(SSB$name,sim.data$SSB)
# plot(df.new$years,SSB$name, type = 'l', ylim = yl, xlab = 'year')
# lines(df.new$years,rowSums(sim.data$SSB), col = 'red')
# polygon()
par(mfrow = c(2,1), mar = c(4,4,1,1))
plotUncertainty(SSB,rowSums(sim.data$SSB))
df.plot <- df.new
df.plot$survey[df.plot$survey == 1] <- NA
plotUncertainty(Biomass, df.plot$survey)
plotUncertainty(Catch, df.new$Catchobs)
# # Calculate the fishing mortality needed to reach F40
#xx<- Check_Identifiable_vs2(obj)
# model.save[[time]] <- list(df = df.new, xx = xx, parameters = rep$par.fixed)
# Fsel <- getSelec(df$age,rep$par.fixed[names(rep$par.fixed) == 'psel_fish'], df$Smin, df$Smax)
# F40 <- referencepoints(SSB$name[length(SSB$name)])
#
Nend <- N$name[N$year == df$years[length(df$years)]]
Fnew <- getRefpoint(rep$par.fixed, df,SSB$name[length(SSB$name)], Fin=df$F0[length(df$F0)], Nend)
#Fnew <- 0.3
# Update the data data frame
Ntmp <- sim.data$Nout
df$tEnd <- df$tEnd+1 # Just run one more year in subsequent runs
df$wage_catch <- df.new$wage_catch
df$wage_survey <- df.new$wage_survey
df$wage_mid <- df.new$wage_mid
df$wage_ssb <- df.new$wage_ssb
df$Catch <- c(df$Catch, Fnew[[1]])
# Save some EM stuff in the last year
SSB.save[[time]] <- SSB
R.save[[time]] <- R
F40.save[time] <- Fnew[[2]]
Catch.save[[time]] <- Catch
# And the fishing mortality
F0.save <- Fnew
#  print(year.future[year])
SSB.test.om[[time]] <- rowSums(sim.data$SSB)
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
SSB$name[length(SSB$name)]
SSBy = SSB$name[length(SSB$name)]
Nend
R0 <- as.numeric(exp(par.fixed)['logRinit'])
Mest <- as.numeric(exp(par.fixed)['logMinit'])
h <- exp(df$logh)
psel <- as.numeric(par.fixed[7:11])
sel <- getSelec(df$age,psel,df$Smin,df$Smax)
Cw <- as.numeric(df$wage_catch[,dim(df$wage_catch)[2]])
M <- rep(Mest, df$nage)
nage <- df$nage
age <- 1:nage
Mage <- M #cumsum(M)
N0 <- NA
N0[1] <- R0
N0[2:(nage-1)] <-R0 * exp(-Mage[1:(nage-2)]*age[1:(nage-2)])
N0[nage] <- R0*exp(-(Mage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB.age <- df$Matsel*N0 # In G
SSB_0 <- sum(SSB.age)*0.5
SSB_pr<- SSB_0/R0
SBeq <- 4*h*R0*0.4*SSB_0-SSB_0*(1-h)/(5*h-1)
#
#
Z <- M+Fin*sel
Zage <- Z#cumsum(M)+cumsum(Fin*sel)
N1 <- NA
N1[1] <- R0
N1[2:(nage-1)] <-R0 * exp(-Zage[1:(nage-2)]*age[1:(nage-2)])
N1[nage] <- R0*exp(-(Zage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB_eq <- sum(df$Matsel*N1)*0.5
SPR <- SSB_eq/SSB_0
# ## Calculate the F40 reference point
getF <- function(par){
Z <- M+par[1]*sel
Zage <- Z
N1 <- NA
N1[1] <- R0
N1[2:(nage-1)] <-R0 * exp(-Zage[1:(nage-2)]*age[1:(nage-2)])
N1[nage] <- R0*exp(-(Zage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB_eq <- sum(df$Matsel*N1)*0.5
#print(SSB_eq/SSB_0)
ans <- (SSB_eq/SSB_0-0.4)^2
return(ans)
}
R0 <- as.numeric(exp(par.fixed)['logRinit'])
par.fixed <- rep
par.fixed <- rep$par.fixed
R0 <- as.numeric(exp(par.fixed)['logRinit'])
Mest <- as.numeric(exp(par.fixed)['logMinit'])
h <- exp(df$logh)
psel <- as.numeric(par.fixed[7:11])
sel <- getSelec(df$age,psel,df$Smin,df$Smax)
Cw <- as.numeric(df$wage_catch[,dim(df$wage_catch)[2]])
M <- rep(Mest, df$nage)
nage <- df$nage
age <- 1:nage
Mage <- M #cumsum(M)
N0 <- NA
N0[1] <- R0
N0[2:(nage-1)] <-R0 * exp(-Mage[1:(nage-2)]*age[1:(nage-2)])
N0[nage] <- R0*exp(-(Mage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB.age <- df$Matsel*N0 # In G
SSB_0 <- sum(SSB.age)*0.5
SSB_pr<- SSB_0/R0
SBeq <- 4*h*R0*0.4*SSB_0-SSB_0*(1-h)/(5*h-1)
#
#
Z <- M+Fin*sel
Zage <- Z#cumsum(M)+cumsum(Fin*sel)
N1 <- NA
N1[1] <- R0
N1[2:(nage-1)] <-R0 * exp(-Zage[1:(nage-2)]*age[1:(nage-2)])
N1[nage] <- R0*exp(-(Zage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB_eq <- sum(df$Matsel*N1)*0.5
SPR <- SSB_eq/SSB_0
# ## Calculate the F40 reference point
getF <- function(par){
Z <- M+par[1]*sel
Zage <- Z
N1 <- NA
N1[1] <- R0
N1[2:(nage-1)] <-R0 * exp(-Zage[1:(nage-2)]*age[1:(nage-2)])
N1[nage] <- R0*exp(-(Zage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB_eq <- sum(df$Matsel*N1)*0.5
#print(SSB_eq/SSB_0)
ans <- (SSB_eq/SSB_0-0.4)^2
return(ans)
}
F40 <- optim(par = 0.1, fn =getF, method = 'Brent', lower = 0, upper = 4)
Z <- M+F40$par*sel
Zage <- Z
Neq <- NA
Neq[1] <- R0
Neq[2:(nage-1)] <-R0 * exp(-Zage[1:(nage-2)]*age[1:(nage-2)])
Neq[nage] <- R0*exp(-(Zage[nage-1]*age[nage-1]))/(1-exp(-M[nage]))# Plus group (ignore recruitment dev's in first year )
SSB_new <- sum(df$Matsel*Neq)*0.5
SPR_new <- SSB_new/SSB_0
Fnew <- F40$par
V <- sum(Nend*Cw*sel)
Fx <- 0.4
SSBy/SSB_0
plot(SSB$name)
lines(colSums(sim.data$SSB))
lines(rowSums(sim.data$SSB))
plot(SSB$name/rowSums(sim.data$SSB))
sim.data$survey
sim.data$survey/rowSums(sim.data$SSB)
plot(sim.data$survey/rowSums(sim.data$SSB))
sim.data$survey[sim.data$survey == 1] <- NA
plot(sim.data$survey/rowSums(sim.data$SSB))
